{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\blog-app\\\\src\\\\components\\\\common\\\\PostForm.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Row, Col, Form } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { CustomQuill as ReactQuill } from \"../features/CustomQuill\";\nimport 'react-quill/dist/quill.snow.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useForm } from \"react-hook-form\";\nimport SelectOptionForm from \"./SelectOptionForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = _ref => {\n  _s();\n  let {\n    action,\n    actionText,\n    ...props\n  } = _ref;\n  const [title, setTitle] = useState(props.title || '');\n  const [author, setAuthor] = useState(props.author || '');\n  const [publishedDate, setPublishedDate] = useState(props.publishedDate || '');\n  const [shortDescription, setShortDescription] = useState(props.shortDescription || '');\n  const [content, setContent] = useState(props.content || '');\n  const [contentError, setContentError] = useState(false);\n  const [dateError, setDateError] = useState(false);\n  const {\n    register,\n    handleSubmit: validate,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const handleSubmit = e => {\n    setDateError(!publishedDate);\n    setContentError(!content);\n    if (content && publishedDate) {\n      action({\n        title,\n        author,\n        publishedDate,\n        shortDescription,\n        content\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: validate(handleSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"m-auto\",\n        lg: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicTitle\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            ...register(\"title\", {\n              required: true,\n              minLength: 3\n            }),\n            type: \"text\",\n            placeholder: \"Enter title\",\n            value: title,\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), errors.title && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"d-block form-text text-danger mt-2\",\n            children: \"This field is required. Min 3 characters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            ...register(\"author\", {\n              required: true,\n              minLength: 3\n            }),\n            type: \"text\",\n            placeholder: \"Enter author\",\n            value: author,\n            onChange: e => setAuthor(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), errors.author && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"d-block form-text text-danger mt-2\",\n            children: \"This field is required with the length min. 3 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Poblished\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: publishedDate,\n            onChange: date => setPublishedDate(date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), dateError && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"d-block form-text text-danger mt-2\",\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SelectOptionForm, {\n            data: props.category,\n            className: \"mt-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Short description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            ...register(\"description\", {\n              required: true,\n              minLength: 20\n            }),\n            rows: 4,\n            as: \"textarea\",\n            placeholder: \"Enter short description\",\n            value: shortDescription,\n            onChange: e => setShortDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), errors.description && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"d-block form-text text-danger mt-2\",\n            children: \"This field is required with the length min. 20 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Main content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n            theme: \"snow\",\n            value: content,\n            onChange: setContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), contentError && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"d-block form-text text-danger mt-2\",\n            children: \"This field also is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: \"8\",\n        className: \"d-flex justify-content-center w-100\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: actionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(PostForm, \"awHZLSRdEqAK7kjvPUQliZw+eX4=\", false, function () {\n  return [useForm];\n});\n_c = PostForm;\nPostForm.propTypes = {\n  action: PropTypes.func,\n  actionText: PropTypes.string,\n  title: PropTypes.string,\n  author: PropTypes.string,\n  shortDescription: PropTypes.string,\n  content: PropTypes.string\n};\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","Row","Col","Form","Button","useState","PropTypes","CustomQuill","ReactQuill","DatePicker","useForm","SelectOptionForm","PostForm","action","actionText","props","title","setTitle","author","setAuthor","publishedDate","setPublishedDate","shortDescription","setShortDescription","content","setContent","contentError","setContentError","dateError","setDateError","register","handleSubmit","validate","formState","errors","e","required","minLength","target","value","date","category","description","propTypes","func","string"],"sources":["C:/projects/blog-app/src/components/common/PostForm.js"],"sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CustomQuill as ReactQuill } from \"../features/CustomQuill\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport SelectOptionForm from \"./SelectOptionForm\";\r\n\r\nconst PostForm = ({ action, actionText, ...props }) => {\r\n    const [title, setTitle] = useState(props.title || '');\r\n    const [author, setAuthor] = useState(props.author || '');\r\n    const [publishedDate, setPublishedDate] = useState(props.publishedDate || '');\r\n    const [shortDescription, setShortDescription] = useState(props.shortDescription || '');\r\n    const [content, setContent] = useState(props.content || '');\r\n    const [contentError, setContentError] = useState(false);\r\n    const [dateError, setDateError] = useState(false);\r\n\r\n\r\n    const { register, handleSubmit: validate, formState: { errors } } = useForm()\r\n\r\n    const handleSubmit = e => {\r\n        setDateError(!publishedDate)\r\n        setContentError(!content)\r\n        if (content && publishedDate) {\r\n            action({ title, author, publishedDate, shortDescription, content })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={validate(handleSubmit)}>\r\n            <Row>\r\n                <Col className=\"m-auto\" lg={8} >\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicTitle\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control {...register(\"title\", { required: true, minLength: 3 })} type=\"text\" placeholder=\"Enter title\" value={title} onChange={e => setTitle(e.target.value)} />\r\n                        {errors.title && <small className=\"d-block form-text text-danger mt-2\">This field is required. Min 3 characters.</small>}\r\n                        <Form.Label>Author</Form.Label>\r\n                        <Form.Control  {...register(\"author\", { required: true, minLength: 3 })} type=\"text\" placeholder=\"Enter author\" value={author} onChange={e => setAuthor(e.target.value)} />\r\n                        {errors.author && <small className=\"d-block form-text text-danger mt-2\">This field is required with the length min. 3 characters</small>}\r\n                        <Form.Label>Poblished</Form.Label>\r\n                        <DatePicker selected={publishedDate} onChange={date => setPublishedDate(date)} />\r\n                        {dateError && <small className=\"d-block form-text text-danger mt-2\">This field is required</small>}\r\n                        <Form.Label>Category:</Form.Label>\r\n                        <SelectOptionForm data={props.category} className=\"mt-2\"/>\r\n                        <Form.Label>Short description</Form.Label>\r\n                        <Form.Control {...register(\"description\", { required: true, minLength: 20 })} rows={4} as=\"textarea\" placeholder=\"Enter short description\" value={shortDescription} onChange={e => setShortDescription(e.target.value)} />\r\n                        {errors.description && <small className=\"d-block form-text text-danger mt-2\">This field is required with the length min. 20 characters</small>}\r\n                        <Form.Label>Main content</Form.Label>\r\n                        <ReactQuill theme=\"snow\" value={content} onChange={setContent}></ReactQuill>\r\n                        {contentError && <small className=\"d-block form-text text-danger mt-2\">This field also is required</small>}\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col lg=\"8\" className=\"d-flex justify-content-center w-100\">\r\n                    <Button variant=\"primary\" type=\"submit\" >\r\n                        {actionText}\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nPostForm.propTypes = {\r\n    action: PropTypes.func,\r\n    actionText: PropTypes.string,\r\n    title: PropTypes.string,\r\n    author: PropTypes.string,\r\n    shortDescription: PropTypes.string,\r\n    content: PropTypes.string,\r\n}\r\n\r\nexport default PostForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}